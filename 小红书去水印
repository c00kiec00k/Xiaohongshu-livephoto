#import <UIKit/UIKit.h>

// 默认 logo 文字
static NSString *const kDefaultLogoText = @"logo";
// UserDefaults keys
static NSString *const kRemoveTabShopping = @"remove_tab_shopping";
static NSString *const kRemoveTabPost = @"remove_tab_post";
static NSString *const kRemoveWatermark = @"remove_save_watermark";
static NSString *const kForceSaveMedia = @"force_save_media";

@interface FloatingButton : UIButton
@property (nonatomic, assign) CGPoint lastLocation;
@end

@implementation FloatingButton

- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {
    self.lastLocation = self.center;
    [super touchesBegan:touches withEvent:event];
}

- (void)touchesMoved:(NSSet *)touches withEvent:(UIEvent *)event {
    UITouch *touch = [touches anyObject];
    CGPoint location = [touch locationInView:self.superview];
    CGPoint delta = CGPointMake(location.x - self.lastLocation.x, location.y - self.lastLocation.y);
    
    CGPoint newCenter = CGPointMake(self.center.x + delta.x, self.center.y + delta.y);
    self.center = newCenter;
    self.lastLocation = newCenter;
}

@end

@interface SettingsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource>
@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) NSArray *settingTitles;
@property (nonatomic, strong) NSArray *settingKeys;
@end

@implementation SettingsViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor colorWithWhite:0 alpha:0.5];
    
    UIView *contentView = [[UIView alloc] init];
    contentView.backgroundColor = [UIColor whiteColor];
    contentView.layer.cornerRadius = 10;
    [self.view addSubview:contentView];
    contentView.frame = CGRectMake(40, CGRectGetHeight([UIScreen mainScreen].bounds)/2 - 200, CGRectGetWidth([UIScreen mainScreen].bounds) - 80, 400);
    
    // 标题
    UILabel *titleLabel = [[UILabel alloc] init];
    titleLabel.text = @"@c00kiec00k";
    titleLabel.textColor = [UIColor grayColor];
    titleLabel.font = [UIFont systemFontOfSize:10];
    [contentView addSubview:titleLabel];
    titleLabel.frame = CGRectMake(15, 15, 100, 20);
    
    // 关闭按钮
    UIButton *closeButton = [UIButton buttonWithType:UIButtonTypeCustom];
    [closeButton setTitle:@"x" forState:UIControlStateNormal];
    [closeButton setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
    closeButton.titleLabel.font = [UIFont systemFontOfSize:12];
    [closeButton addTarget:self action:@selector(dismissVC) forControlEvents:UIControlEventTouchUpInside];
    [contentView addSubview:closeButton];
    closeButton.frame = CGRectMake(CGRectGetWidth(contentView.frame) - 30, 15, 20, 20);
    
    // 设置列表
    self.settingTitles = @[@"去除底栏购物", @"去除底栏加号", @"去除所有水印", @"强制保存媒体"];
    self.settingKeys = @[kRemoveTabShopping, kRemoveTabPost, kRemoveWatermark, kForceSaveMedia];
    
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 50, CGRectGetWidth(contentView.frame), 300) style:UITableViewStylePlain];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    self.tableView.backgroundColor = [UIColor clearColor];
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [contentView addSubview:self.tableView];
    
    // 底部文字
    UILabel *bottomLabel = [[UILabel alloc] init];
    bottomLabel.numberOfLines = 2;
    bottomLabel.textAlignment = NSTextAlignmentCenter;
    bottomLabel.textColor = [UIColor lightGrayColor];
    bottomLabel.font = [UIFont systemFontOfSize:8];
    bottomLabel.text = @"𝗗𝗲𝘃𝗲𝗹𝗼𝗽𝗲𝗱 𝗯𝘆 @维他入我心\n𝗠𝗼𝗱𝗶𝗳𝗶𝗲𝗱 𝗯𝘆 @𝗰𝟬𝟬𝗸𝗶𝗲𝗰𝟬𝟬𝗸";
    [contentView addSubview:bottomLabel];
    bottomLabel.frame = CGRectMake(0, CGRectGetHeight(contentView.frame) - 40, CGRectGetWidth(contentView.frame), 30);
}

- (void)dismissVC {
    [self dismissViewControllerAnimated:YES completion:nil];
}

#pragma mark - UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.settingTitles.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *cellId = @"Cell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellId];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellId];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        
        UILabel *titleLabel = [[UILabel alloc] init];
        titleLabel.textAlignment = NSTextAlignmentCenter;
        titleLabel.textColor = [UIColor grayColor];
        titleLabel.font = [UIFont systemFontOfSize:12];
        titleLabel.tag = 100;
        [cell.contentView addSubview:titleLabel];
        titleLabel.frame = CGRectMake(10, 0, CGRectGetWidth(tableView.frame) - 80, 44);
        
        UISwitch *switchView = [[UISwitch alloc] init];
        switchView.tag = 200;
        [switchView addTarget:self action:@selector(switchChanged:) forControlEvents:UIControlEventValueChanged];
        [cell.contentView addSubview:switchView];
        switchView.frame = CGRectMake(CGRectGetWidth(tableView.frame) - 60, 6.5, 51, 31);
    }
    
    UILabel *label = (UILabel *)[cell.contentView viewWithTag:100];
    label.text = self.settingTitles[indexPath.row];
    
    UISwitch *switchView = (UISwitch *)[cell.contentView viewWithTag:200];
    switchView.on = [[NSUserDefaults standardUserDefaults] boolForKey:self.settingKeys[indexPath.row]];
    
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 44;
}

- (void)switchChanged:(UISwitch *)sender {
    NSIndexPath *indexPath = [self.tableView indexPathForCell:(UITableViewCell *)sender.superview.superview];
    [[NSUserDefaults standardUserDefaults] setBool:sender.isOn forKey:self.settingKeys[indexPath.row]];
    [[NSUserDefaults standardUserDefaults] synchronize];
}

@end

%hook UIWindow

- (void)makeKeyAndVisible {
    %orig;
    
    if (![self.rootViewController.view viewWithTag:999]) {
        FloatingButton *floatingButton = [FloatingButton buttonWithType:UIButtonTypeCustom];
        floatingButton.tag = 999;
        [floatingButton setTitle:kDefaultLogoText forState:UIControlStateNormal];
        [floatingButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        floatingButton.backgroundColor = [UIColor blackColor];
        floatingButton.layer.cornerRadius = 20;
        floatingButton.frame = CGRectMake(CGRectGetWidth(self.bounds)/2 - 20, CGRectGetHeight(self.bounds)/2 - 20, 40, 40);
        [floatingButton addTarget:self action:@selector(longPress:) forControlEvents:UIControlEventTouchUpInside];
        
        UILongPressGestureRecognizer *longPress = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(longPress:)];
        [floatingButton addGestureRecognizer:longPress];
        
        [self.rootViewController.view addSubview:floatingButton];
        
        // 添加三指双击手势
        UITapGestureRecognizer *tripleTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleTripleTap:)];
        tripleTap.numberOfTouchesRequired = 3;
        tripleTap.numberOfTapsRequired = 2;
        [self.rootViewController.view addGestureRecognizer:tripleTap];
    }
}

%new
- (void)longPress:(id)sender {
    SettingsViewController *settingsVC = [[SettingsViewController alloc] init];
    settingsVC.modalPresentationStyle = UIModalPresentationOverFullScreen;
    [self.rootViewController presentViewController:settingsVC animated:YES completion:nil];
}

%new
- (void)handleTripleTap:(UITapGestureRecognizer *)gesture {
    UIView *floatingButton = [self.rootViewController.view viewWithTag:999];
    floatingButton.hidden = !floatingButton.hidden;
}

%end

%hook XYTabBar

- (void)layoutSubviews {
    %orig;
    
    if (self.subviews.count >= 3) {
        BOOL removeShoppingTab = [[NSUserDefaults standardUserDefaults] boolForKey:kRemoveTabShopping];
        BOOL removePostTab = [[NSUserDefaults standardUserDefaults] boolForKey:kRemoveTabPost];
        
        NSMutableArray *viewsToRemove = [NSMutableArray array];
        if (removeShoppingTab) {
            UIView *shoppingTab = [self.subviews objectAtIndex:1];
            [viewsToRemove addObject:shoppingTab];
        }
        if (removePostTab && self.subviews.count > 2) {
            UIView *postTab = [self.subviews objectAtIndex:removeShoppingTab ? 1 : 2];
            [viewsToRemove addObject:postTab];
        }
        
        for (UIView *view in viewsToRemove) {
            [view removeFromSuperview];
        }
    }

    CGFloat tabWidth = CGRectGetWidth(self.bounds) / self.subviews.count;
    CGFloat xPosition = 0;
    
    for (UIView *subview in self.subviews) {
        CGRect frame = subview.frame;
        frame.origin.x = xPosition;
        frame.size.width = tabWidth;
        subview.frame = frame;
        xPosition += tabWidth;
    }
}

%end

%hook XYPHMediaSaveConfig

- (void)setDisableWatermark:(_Bool)arg1 {
    BOOL removeWatermark = [[NSUserDefaults standardUserDefaults] boolForKey:kRemoveWatermark];
    %orig(removeWatermark);
}

- (void)setDisableSave:(_Bool)arg1 {
    BOOL forceSaveMedia = [[NSUserDefaults standardUserDefaults] boolForKey:kForceSaveMedia];
    %orig(forceSaveMedia ? NO : arg1);
}

%end
