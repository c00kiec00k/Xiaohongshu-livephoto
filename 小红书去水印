static FloatingButton *floatingButton = nil;
static BOOL isFloatingButtonVisible = YES;

// Hook UIResponder 以处理摇动手势
%hook UIResponder 

- (void)motionBegan:(UIEventSubtype)motion withEvent:(UIEvent *)event {
    %orig;
    if (motion == UIEventSubtypeMotionShake) {
        dispatch_async(dispatch_get_main_queue(), ^{
            if (floatingButton) {
                isFloatingButtonVisible = !isFloatingButtonVisible;
                floatingButton.hidden = !isFloatingButtonVisible;
            }
        });
    }
}

%end

// Hook XHSAppDelegate 以添加悬浮按钮
%hook XHSAppDelegate

%new
- (void)setupFloatingButton {
    dispatch_async(dispatch_get_main_queue(), ^{
        UIWindow *window = getKeyWindow();
        if (!window) return;
        
        // 创建悬浮按钮
        if (!floatingButton) {
            CGFloat buttonSize = 40;
            CGFloat screenWidth = [UIScreen mainScreen].bounds.size.width;
            CGFloat screenHeight = [UIScreen mainScreen].bounds.size.height;
            
            floatingButton = [[FloatingButton alloc] initWithFrame:CGRectMake(
                (screenWidth - buttonSize) / 2,
                (screenHeight - buttonSize) / 2,
                buttonSize,
                buttonSize
            )];
            
            // 设置默认显示状态
            floatingButton.hidden = !isFloatingButtonVisible;
            
            // 添加到窗口并确保在最上层
            [window addSubview:floatingButton];
            [window bringSubviewToFront:floatingButton];
        }
    });
}

- (void)applicationDidBecomeActive:(id)arg1 {
    %orig;
    // 延迟2秒创建悬浮按钮,确保窗口完全初始化
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self setupFloatingButton];
    });
}

%end

// Hook XYTabBar 以实现底栏修改
%hook XYTabBar

- (void)layoutSubviews {
    %orig;
    
    if (self.subviews.count >= 3) {
        BOOL removeShoppingTab = [[NSUserDefaults standardUserDefaults] boolForKey:@"remove_tab_shopping"];
        BOOL removePostTab = [[NSUserDefaults standardUserDefaults] boolForKey:@"remove_tab_post"];
        
        NSMutableArray *viewsToRemove = [NSMutableArray array];
        
        if (removeShoppingTab) {
            UIView *shoppingTab = [self.subviews objectAtIndex:1];
            if (shoppingTab) [viewsToRemove addObject:shoppingTab];
        }
        
        if (removePostTab) {
            UIView *postTab = [self.subviews objectAtIndex:removeShoppingTab ? 1 : 2];
            if (postTab) [viewsToRemove addObject:postTab];
        }
        
        // 移除选中的标签
        for (UIView *view in viewsToRemove) {
            [view removeFromSuperview];
        }
        
        // 重新布局剩余标签
        CGFloat tabWidth = CGRectGetWidth(self.bounds) / self.subviews.count;
        CGFloat xPosition = 0;
        
        for (UIView *subview in self.subviews) {
            CGRect frame = subview.frame;
            frame.origin.x = xPosition;
            frame.size.width = tabWidth;
            subview.frame = frame;
            xPosition += tabWidth;
        }
    }
}

%end

// Hook XYPHMediaSaveConfig 以实现保存相关功能
%hook XYPHMediaSaveConfig

- (void)setDisableWatermark:(_Bool)arg1 {
    BOOL removeWatermark = [[NSUserDefaults standardUserDefaults] boolForKey:@"remove_save_watermark"];
    %orig(removeWatermark);
}

- (void)setDisableSave:(_Bool)arg1 {
    BOOL forceSaveMedia = [[NSUserDefaults standardUserDefaults] boolForKey:@"force_save_media"];
    if (forceSaveMedia) {
        %orig(NO);
    } else {
        %orig(arg1);
    }
}

%end

%ctor {
    // 初始化设置默认值
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    if (![defaults objectForKey:@"remove_tab_shopping"]) {
        [defaults setBool:NO forKey:@"remove_tab_shopping"];
    }
    if (![defaults objectForKey:@"remove_tab_post"]) {
        [defaults setBool:NO forKey:@"remove_tab_post"];
    }
    if (![defaults objectForKey:@"remove_save_watermark"]) {
        [defaults setBool:NO forKey:@"remove_save_watermark"];
    }
    if (![defaults objectForKey:@"force_save_media"]) {
        [defaults setBool:NO forKey:@"force_save_media"];
    }
    [defaults synchronize];
}
